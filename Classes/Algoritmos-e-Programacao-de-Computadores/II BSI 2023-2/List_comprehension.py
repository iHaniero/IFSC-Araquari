# -*- coding: utf-8 -*-
"""List Comprehension

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZtlILRmy58uArp9fo6W6DZn3uXVqJErL

**1. Crie uma lista com os números de 1 a 10 usando compreensão de lista.**
"""

num = [x for x in range(11)]

print(num)

"""**2. Crie uma lista com os números ímpares de 1 a 50.**"""

impar = [x for x in range(51) if x % 2 != 0]

print(impar)

"""**3. Crie uma lista com as letras maiúsculas de uma string qualquer.**"""

maiusculas = [letra.capitalize() for letra in "alo"]

print(maiusculas)

"""**4. Crie uma lista com o comprimento de cada palavra em uma string.**"""

frase = "alo io xau"

compri = [len(palavra) for palavra in frase.split()]

print(compri)

"""**5. Crie uma lista com os números divisíveis por 3 e 5 de 1 a 30.**"""

div = [x for x in range(31) if x % 3 == 0 or x % 5 == 0]

print(div)

"""**6. Crie uma lista com as palavras de uma string que tenham mais de 3 letras.**"""

frase = "Crie uma lista com as palavras de uma string que tenham mais de 3 letras."
frase_strip = frase.strip(".")

lista = [palavra for palavra in frase_strip.split() if len(palavra) >= 3]

print(lista)

"""**7. Crie uma lista com os números primos de 1 a 20. Dica: use uma função para
verificar se o número é primo ou não.**
"""

from sympy import isprime

lista = [num for num in range(21) if isprime(num) == True ]

print(lista)

def is_prime(n):
  flag = 0
  for i in range(2, n):
    if n % i == 0:
      flag = 1

  if flag == 0:
    return True
  else:
    return False

primo = [n for n in range(2, 21) if is_prime(n)]

print(primo)

"""**8. Crie uma lista com as datas de todos os dias de janeiro em um ano bissexto
(considerando que um ano bissexto é divisível por 4).**
"""

datas_j = [(dia,"/ 01 /", ano) for ano in range(2000,2005) for dia in range(31) if ano % 4 == 0]

print(datas_j)

"""**9. Crie uma lista de strings com os primeiros 10 nomes da lista de nomes.**"""

nomes = ["Jose","Leandro","João","Siu","Kan"]

l_nomes = [nome for nome in nomes if nomes.index(nome) < 3]

print(l_nomes)

"""**10. Crie uma lista de strings com os nomes dos primeiros 10 nomes da lista de
nomes, mas com as primeiras letras maiúsculas.**
"""

nomes = ["jose","leandro","joão","siu","kan"]

l_nomes = [nome.capitalize() for nome in nomes if nomes.index(nome) < 3]

print(l_nomes)

"""**11. Crie uma lista de strings com os nomes dos primeiros 10 nomes da lista de
nomes, mas sem as vogais.**
"""

nomes = ["Jose","Leandro","João","Siu","Kan"]

l_nomes = [letra for nome in nomes for letra in nome if letra not in "aeiouã"]

print(l_nomes)

"""**12. Concatenar elementos de sub-listas em uma única lista**"""

naipes = ['Copas', 'Ouros', 'Espadas', 'Paus']
cartas = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']

carta_n = [(carta,naipe) for carta in cartas for naipe in naipes]

print(carta_n)

"""**13. Criar um dicionário a partir de duas listas**"""

naipes = ['Copas', 'Ouros', 'Espadas', 'Paus']
cartas = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']

carta_n = [{carta:naipe} for carta in cartas for naipe in naipes]

print(carta_n)