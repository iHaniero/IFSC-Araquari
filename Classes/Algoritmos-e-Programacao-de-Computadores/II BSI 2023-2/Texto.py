# -*- coding: utf-8 -*-
"""Texto

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gKS4uim74fnQmB_cGcJnSUkfv3_9D9lA

**1. Crie um programa que crie um arquivo chamado "texto.txt" e escreva nele o
seguinte texto: "Olá, mundo!"**
"""

arquivo = open("texto.txt", "w")

arquivo.write(f"Olá, Mundo")

arquivo.close()

"""**2. Crie um programa que leia o conteúdo do arquivo "texto.txt" criado no
exercício anterior e o exiba no console.**
"""

arquivo = open("texto.txt")

for linha in arquivo.readlines():
  print(linha)

arquivo.close()

"""**3. Crie um programa que conte e exiba o número de linhas no arquivo
"texto.txt".**
"""

arquivo = open("texto.txt")

count = 0

for linha in arquivo.readlines():
  count = count + 1

print(f"{count}")

arquivo.close()

"""**4. Crie um programa que copie o conteúdo do arquivo "texto.txt" para um novo
arquivo chamado "copia.txt".**
"""

arquivo = open("texto.txt")
copia = open("copia.txt", "w")

for linha in arquivo.readlines():
  copia.write(linha)

arquivo.close()
copia.close()

copia = open("copia.txt")

for linha in copia.readlines():
  print(linha)

copia.close()

"""**5. Crie um programa que leia o conteúdo dos arquivos "texto.txt" e
"copia.txt", e escreva o conteúdo combinado em um terceiro arquivo
chamado "combinado.txt".**
"""

arquivo = open("texto.txt")
copia = open("copia.txt")
combine = open("combinado.txt", "w")

for linha in arquivo.readlines():
  combine.write(f"{linha}\n")

for linha in copia.readlines():
  combine.write(f"{linha}")

arquivo.close()
copia.close()
combine.close()

combine = open("combinado.txt")

for linha in combine.readlines():
  print(linha)

combine.close()

"""**6. Crie um programa que conte e exiba o número de palavras no arquivo
"texto.txt".**
"""

arquivo = open("texto.txt")

for linha in arquivo:
  for palavra in linha.split():
    print(palavra)

arquivo.close()

"""**7. Crie um programa que leia o conteúdo do arquivo "texto.txt" e substitua
todas as ocorrências da palavra "mundo" por "Python". O novo conteúdo deve ser
escrito em um novo arquivo chamado "modificado.txt".**
"""

arquivo = open("texto.txt")
modify = open("modificado.txt", "w")

for linha in arquivo:
  for palavra in linha.split():
    if palavra == "mundo" or palavra == "Mundo":
      modify.write(" Python")
    else:
      modify.write(palavra)

arquivo.close()
modify.close()

modify = open("modificado.txt")

for linha in modify:
  print(linha)

modify.close()

"""**8. Crie um programa que adicione a frase "Isso é incrível!" ao final do arquivo
"texto.txt".**
"""

arquivo = open("texto.txt", "a")

arquivo.write(" Isso é incrível")

arquivo.close()

"""**9. Crie um programa que leia o conteúdo do arquivo "texto.txt" e conte quantas
letras (excluindo espaços) estão presentes no texto.**
"""

arquivo = open("texto.txt", "r+")

letras = arquivo.read()

letras = letras.replace(" ", "")
letras = letras.replace(",", "")

print(len(letras))

arquivo.close()

"""**10. Crie um programa que leia o conteúdo do arquivo "numeros.txt" (contendo
números inteiros separados por vírgula), some esses números e exiba o
resultado.**
"""

arquivo = open("numeros.txt", "w")

last = (3)+1

for linha in range(1,last):
  if linha == (last - 1):
    arquivo.write(f"{linha}")
  else:
    arquivo.write(f"{linha},")

arquivo.close()

arquivo = open("numeros.txt")

for linha in arquivo:
  print(sum(map(int, linha.split(','))))

arquivo.close()

"""**11. Faça um programa que leia um arquivo texto contendo uma lista de endereços IP
e gere um outro arquivo, contendo um relatório dos endereços IP válidos e
inválidos.**

O arquivo de entrada possui o seguinte formato:

200.135.80.9

192.168.1.1

8.35.67.74

257.32.4.5

85.345.1.2

1.2.3.4

9.8.234.5

192.168.0.256

O arquivo de saída possui o seguinte formato:

[Endereços válidos:]

200.135.80.9

192.168.1.1

8.35.67.74

1.2.3.4

[Endereços inválidos:]

257.32.4.5

85.345.1.2

9.8.234.5

192.168.0.256
"""

arquivo_ips = open("lista_ip.txt", "w")

arquivo_ips.write(f"200.135.80.9\n192.168.1.1\n8.35.67.74\n257.32.4.5\n85.345.1.2\n1.2.3.4\n9.8.234.5\n192.168.0.256")

arquivo_ips.close()

import ipaddress

arquivo_ips = open("lista_ip.txt")
arquivo_rel = open("relatorio.txt", "w")

true = []
false = []

for linha in arquivo_ips:
  linha_strip = linha.strip()
  try:
    ipaddress.IPv4Network(linha_strip)
    true.append(linha)
  except ValueError:
    false.append(linha)

arquivo_rel.write(f"[Endereços válidos:]\n\n")

for i in range(len(true)):
  arquivo_rel.write(true[i])
  if i == (len(true)-1):
    arquivo_rel.write(f"\n")

arquivo_rel.write(f"[Endereços inválidos:]\n\n")

for i in range(len(false)):
  arquivo_rel.write(false[i])

arquivo_ips.close()
arquivo_rel.close()

"""**12. A ACME Inc., uma empresa de 500 funcionários, está tendo problemas de espaço
em disco no seu servidor de arquivos. Para tentar resolver este problema, o
Administrador de Rede precisa saber qual o espaço ocupado pelos usuários, e
identificar os usuários com maior espaço ocupado. Através de um programa,
baixado da Internet, ele conseguiu gerar o seguinte arquivo, chamado
"usuarios.txt":**

alexandre 456123789

anderson 1245698456

antonio 123456456

carlos 91257581

cesar 987458

rosemary 789456125

**No arquivo acima, o nome do usuário possui 15 caracteres. A partir dele, você deve
criar um programa que gere um relatório, chamado "relatório.txt", no seguinte
formato:**

ACME Inc. Uso do espaço em disco pelos usuários
------------------------------------------------------------------------
Nr. Usuário Espaço utilizado % do uso

1 alexandre 434,99 MB 16,85%

2 anderson 1187,99 MB 46,02%

3 antonio 117,73 MB 4,56%

4 carlos 87,03 MB 3,37%

5 cesar 0,94 MB 0,04%

6 rosemary 752,88 MB 29,16%

Espaço total ocupado: 2581,57 MB

Espaço médio ocupado: 430,26 MB


**Observação: O arquivo de entrada deve ser lido uma única vez, e os dados
armazenados em memória, caso sejam necessários, de forma a agilizar a execução do
programa. A conversão do espaço ocupado em disco, de bytes para megabytes deverá
ser feita através de uma função separada, que será chamada pelo programa principal.
O cálculo do percentual de uso também deverá ser feito através de uma função, que
será chamada pelo programa principal.**
"""

import re

arquivo_users = open("usuarios.txt", "w")

arquivo_users.write(f"Alexandre 456123789\nAnderson 1245698456\nAntonio 123456456\nCarlos 91257581\nCesar 987458\nRosemary 789456125")

arquivo_users.close()

##################### [IMPORTS] ####################################

import re

##################### [OPENS] ######################################

arquivo_users = open("usuarios.txt")

##################### [VARIAVEIS] ##################################

count = 0
Megabytes = []

##################### [FUNÇÕES] ####################################

def converter():
  arquivo_users.seek(0)
  for line in arquivo_users.readlines():
    Num_l = [int(s) for s in re.findall(r'\b\d+\b',line)]
    Convertido = round(Num_l[0] / 1048576, 2)
    Megabytes.append(Convertido)
  return Megabytes

def total_mb():
  Total = 0
  Percen = []
  for i in range(len(convertido)):
    Total = Total + convertido[i]
  Media = round(Total / len(convertido), 2)
  for i in range(len(convertido)):
    Percen.append(round((convertido[i]*100)/Total, 2))
  return Total, Media, Percen

##################### [ALGORITMOS] ################################

convertido = converter()
porcentagem = total_mb()

with open("dados.txt", "w") as file:
  arquivo_users.seek(0)
  for line in arquivo_users.readlines():
    count = count + 1
    lines = [re.findall("^[a-zA-Z]+", line)]
    file.write(f"{count}   {lines[0][0]}  {convertido[count-1]} MB {porcentagem[2][count-1]} %\n")

org = "Nr./Usuário/Espaço usado/% do uso"
org = org.split("/")

with open("relátorio.txt", "w") as file:
    file.write(f"ACME Inc. Uso do espaço em disco pelos usuários\n\n{org[0]:<5}{org[1]:<15}{org[2]:<15}{org[3]:>5}\n\n")
    with open(r'dados.txt') as f:
      for line in f:
        s = line.split()
        file.write(f'{s[0]:<5}{s[1]:<15}{s[2]:<8}{s[3]:<7}{s[4]:>5}{s[5]:>2}\n')
    file.write(f"\nEspaço total ocupado: {porcentagem[0]} MB\nEspaço médio ocupado: {porcentagem[1]} MB")

"""**13. Crie um programa que leia um arquivo-texto e gere um arquivo de saída
paginado. Cada linha não deve conter mais de 76 caracteres. Cada página terá no
máximo 60 linhas. Adicione na última linha de cada página o número da página
atual e o nome do arquivo original.**
"""

##################### [IMPORTS] ################################################

import random
import string

##################### [RESET] ##################################################

reset = open("saida.txt", "w").close()
reset = open("texto.txt", "w").close()

##################### [VARIAVEIS] ##############################################

count_letters = 0
count_lines = 0
pag = 0

##################### [ALGORITMOS] #############################################

with open("texto.txt", "r+") as file:
  file.write("".join( [random.choice(string.ascii_letters) for i in range(70)]))
  with open("saida.txt", "w") as s:
    for line in file.readlines():
      chars = len(line)
      for character in line:
        count_letters = count_letters + 1
        if count_letters > 76:
          count_lines = count_lines + 1
          count_letters = 0
          s.write("\n")
        else:
          s.write(f"{character}")
      if count_lines > 60:
        count_lines = 0
        pag = pag + 1
        print("oi")
        s.write(f"[{pag}]")

with open("texto.txt", "rb") as f:
    num_lines = sum(1 for _ in f)


print(chars)

##################### [IMPORTS] ################################################

import random
import string

##################### [VARIAVEIS] ##############################################

count_letters = 0
count_lines = 0
pag = 0

##################### [ALGORITMOS] #############################################

with open("texto.txt", "r+") as file:
  file.write("".join([random.choice(string.ascii_letters) for i in range(70)]))
  s = open("saida.txt", "w")
  for line in file.readlines():
    for character in line:
      count_letters = count_letters + 1
      if count_letters > 75:
          count_lines = count_lines + 1
          count_letters = 0
          s.write(f"{character}\n")
      else:
          s.write(f"{character}")
      if count_lines > 60:
        count_lines = 0
        pag = pag + 1
        print("oi")
        s.write(f"\n[{pag}]\n\n")

s.close()